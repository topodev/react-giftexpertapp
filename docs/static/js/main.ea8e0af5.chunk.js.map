{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","Proptypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAEQ,sBAAMC,SAfO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MASd,SACA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAxBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,aA+B/BZ,EAAYe,UAAU,CAClBd,cAAee,IAAUC,KAAKC,Y,mCCxCpBC,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAWH,GAF7C,gEAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBZM,GAhBY,4CAAF,sDCCRO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAIhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGtB,ECFyB,SAAEA,GAE1B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WAIPxB,EAAQC,GACPwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAItB,CAAEpB,IAKEqB,EDvBwBK,CAAc1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGpB,OACI,qCACA,6BAAKpB,IAEJoB,GAAW,0CAGZ,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEhBnBgB,EAAe,WAGxB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAGA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI+C,EAAWnB,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCb1B6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea8e0af5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        \r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handlesubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n\r\n            setCategories( cats=>[ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n       \r\n            <form onSubmit={handlesubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange}         \r\n            />\r\n            \r\n            </form>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n    setCategories: Proptypes.func.isRequired\r\n}\r\n","\r\n export const getGifs= async( category )=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit =10&api_key=wDKw7f5qC1OQmpyLUGb9GOWifztk46mn`\r\n    const resp = await fetch(url);\r\n    const {data}= await resp.json();\r\n  \r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n  \r\n    \r\n  \r\n    return gifs;\r\n  \r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title,url} ) => {\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n   const { data:images, loading }= useFetchGifs( category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p>loading..</p>}\r\n\r\n          \r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>(\r\n                       <GifGridItem\r\n                       key={img.id} \r\n                       { ...img }\r\n                       />\r\n                    ))\r\n                }\r\n            \r\n            \r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n\r\n        \r\n\r\n        getGifs(category)\r\n        .then( imgs=>{\r\n           \r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n            \r\n        })\r\n    }, [ category ])\r\n    \r\n\r\n    \r\n\r\n    return state;\r\n\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                categories.map(category =>(\r\n                     <GifGrid \r\n                     key={category}\r\n                     category={category}/>\r\n                ))\r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GitExpertApp } from './GitExpertApp';\r\n\r\nimport './index.css'\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <GitExpertApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}